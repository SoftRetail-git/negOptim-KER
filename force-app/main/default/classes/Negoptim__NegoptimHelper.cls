/*
This file is generated and isn't the actual source code for this
managed global class.
This read-only file shows the class's global constructors,
methods, variables, and properties.
To enable code to compile, all methods return null.
*/
global class NegoptimHelper {
    global NegoptimHelper() {

    }
    global static String addFieldPrefix(String objectName, List<String> theFields) {
        return null;
    }
    global static Boolean checkAccessibilityFields(Map<String,Schema.SObjectField> fieldsMap, List<String> fields) {
        return null;
    }
    global static Boolean checkAccessibility(Schema.SObjectType objType, List<String> fields) {
        return null;
    }
    global static Boolean checkCreatibility(Schema.SObjectType objType, List<String> fields) {
        return null;
    }
    global static Boolean checkDeletibility(Schema.SObjectType objType) {
        return null;
    }
    global static Boolean checkUpdatibility(Schema.SObjectType objType, List<String> fields) {
        return null;
    }
    global static String getCorporateCurrency() {
        return null;
    }
    global static String getDecimalSeparator() {
        return null;
    }
    global static String getFieldNameAsRelation(String fielName) {
        return null;
    }
    global static Folder getFolderSettings() {
        return null;
    }
    global static Integer getNbClientClusterFields() {
        return null;
    }
    global static String getObjectRecordTypeId(Schema.SObjectType sObjectType, String recordTypeName) {
        return null;
    }
    global static Map<Id,String> getObjectRecordTypeMapDeveloperNames(Schema.SObjectType sObjectType) {
        return null;
    }
    global static Map<String,Id> getObjectRecordTypeMapIds(Schema.SObjectType sObjectType) {
        return null;
    }
    global static Map<Id,String> getObjectRecordTypeMapLabels(Schema.SObjectType sObjectType) {
        return null;
    }
    @AuraEnabled
    global static String getPackagePrefix(Boolean includeUnderscore) {
        return null;
    }
    global static Map<String,String> getPicklistTranslationMap(Schema.DescribeFieldResult dFR, Boolean onlyActive) {
        return null;
    }
    global static Id getRootId() {
        return null;
    }
    global static Id getRootIdByRT(String developerName) {
        return null;
    }
    global static String getSObjectLabel(String objectName) {
        return null;
    }
    global static Boolean isTriggerDisabled(String triggerName) {
        return null;
    }
    global static String normalizeAPIName(String name) {
        return null;
    }
    global static Schema.SObjectField validateField(String objectName, List<String> theFields) {
        return null;
    }
}
