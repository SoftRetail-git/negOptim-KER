/*
Ce fichier est généré ne correspond pas au code source de cette
classe globale gérée.
Ce fichier en lecture seule affiche les constructeurs globaux,
les méthodes, les variables et les propriétés de la classe.
Pour activer le code à compiler, toutes les méthodes renvoient null.
*/
global class NegoptimHelper {
    global NegoptimHelper() {

    }
    global static String addFieldPrefix(String objectName, List<String> theFields) {
        return null;
    }
    global static Boolean checkAccessibilityFields(Map<String,Schema.SObjectField> fieldsMap, List<String> fields) {
        return null;
    }
    global static Boolean checkAccessibility(Schema.SObjectType objType, List<String> fields) {
        return null;
    }
    global static Boolean checkCreatibility(Schema.SObjectType objType, List<String> fields) {
        return null;
    }
    global static Boolean checkDeletibility(Schema.SObjectType objType) {
        return null;
    }
    global static Boolean checkUpdatibility(Schema.SObjectType objType, List<String> fields) {
        return null;
    }
    global static String defaultPicklistValue(Schema.DescribeFieldResult dFR) {
        return null;
    }
    global static String formatDecimalValue(Decimal d, Integer places) {
        return null;
    }
    global static String formatPercentageValue(Decimal d, Boolean wildcard) {
        return null;
    }
    global static Map<String,Id> getAvailableObjectRecordTypeMapIds(Schema.SObjectType sObjectType) {
        return null;
    }
    global static Map<Id,Set<Id>> getBUChildrenMap(Set<Id> ids) {
        return null;
    }
    global static Map<Id,Set<Id>> getBUParentsMap(Set<Id> ids) {
        return null;
    }
    global static String getCorporateCurrency() {
        return null;
    }
    global static String getDecimalSeparator() {
        return null;
    }
    global static String getFieldNameAsRelation(String fielName) {
        return null;
    }
    global static Folder getFolderSettings() {
        return null;
    }
    global static Date getLastDayOfMonth(Date aDate) {
        return null;
    }
    global static Date getLastDayOfMonth(Integer year, Integer month) {
        return null;
    }
    global static Integer getNbClientClusterFields() {
        return null;
    }
    global static Id getObjectDefaultRecordTypeId(Schema.SObjectType sObjectType) {
        return null;
    }
    global static Id getObjectDefaultRecordTypeId(String objectName) {
        return null;
    }
    global static String getObjectRecordTypeId(Schema.SObjectType sObjectType, String recordTypeName) {
        return null;
    }
    global static Map<String,String> getObjectRecordTypeMapDeveloperNameToLabel(Schema.SObjectType sObjectType) {
        return null;
    }
    global static Map<Id,String> getObjectRecordTypeMapDeveloperNames(Schema.SObjectType sObjectType) {
        return null;
    }
    global static Map<String,Id> getObjectRecordTypeMapIds(Schema.SObjectType sObjectType) {
        return null;
    }
    global static Map<Id,String> getObjectRecordTypeMapLabels(Schema.SObjectType sObjectType) {
        return null;
    }
    global static String getObjectRecordTypeName(Schema.SObjectType sObjectType, Id recordTypeId) {
        return null;
    }
    @AuraEnabled
    global static String getPackagePrefix(Boolean includeUnderscore) {
        return null;
    }
    global static Map<String,String> getPicklistTranslationMap(Schema.DescribeFieldResult dFR, Boolean onlyActive) {
        return null;
    }
    global static Id getRootId() {
        return null;
    }
    global static Id getRootIdByRT(String developerName) {
        return null;
    }
    global static String getSObjectLabel(String objectName) {
        return null;
    }
    global static Boolean isTriggerDisabled(String triggerName) {
        return null;
    }
    global static String normalizeAPIName(String name) {
        return null;
    }
    global static List<List<String>> parseCSV(List<String> lines, Boolean skipHeaders, String separator) {
        return null;
    }
    global static List<List<String>> parseCSV(List<String> lines, String separator) {
        return null;
    }
    global static List<List<String>> parseCSV(String contents, Boolean skipHeaders) {
        return null;
    }
    global static List<Decimal> smartDivision(Decimal numerator, Integer denominator, Integer decimalPlaces, System.RoundingMode roundingMode) {
        return null;
    }
    global static Schema.SObjectField validateField(String objectName, List<String> theFields) {
        return null;
    }
    global static Boolean validateId(String Idparam) {
        return null;
    }
}
